import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset (you can replace this with your dataset)
# For demonstration, let's assume we have a CSV file named 'house_data.csv' with columns: 'area', 'bedrooms', 'bathrooms', 'age', 'price'
# Note: This dataset is just hypothetical and not real
house_data = pd.read_csv('house_data.csv')

# Preprocessing: Extract features and target variable
X = house_data[['area', 'bedrooms', 'bathrooms', 'age']]
y = house_data['price']

# Split dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the Decision Tree Regressor model
model = DecisionTreeRegressor()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("Mean Squared Error:", mse)
print("R-squared Score:", r2)
