import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from statsmodels.tsa.arima.model import ARIMA
from sklearn.metrics import mean_squared_error
from datetime import datetime, timedelta

# Load the dataset
df = sns.load_dataset('retail')
df = df[['date', 'sales']]

# Convert date column to datetime
df['date'] = pd.to_datetime(df['date'])

# Aggregate sales by date
df = df.groupby('date').sum()

# Resample data to monthly frequency
monthly_sales = df.resample('M').sum()

# Train-test split
train_size = int(len(monthly_sales) * 0.8)
train, test = monthly_sales.iloc[:train_size], monthly_sales.iloc[train_size:]

# Fit ARIMA model
model = ARIMA(train, order=(5, 1, 0))
model_fit = model.fit()

# Forecast future sales
forecast = model_fit.forecast(steps=len(test))[0]

# Calculate RMSE
mse = mean_squared_error(test, forecast)
rmse = np.sqrt(mse)
print("Root Mean Squared Error (RMSE):", rmse)

# Plotting
plt.plot(train.index, train, label='Training Data')
plt.plot(test.index, test, label='Test Data')
plt.plot(test.index, forecast, label='Forecast')
plt.xlabel('Date')
plt.ylabel('Sales')
plt.title('Future Sales Prediction using ARIMA')
plt.legend()
plt.show()
